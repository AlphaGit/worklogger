{"version":3,"file":"lambdaHandler.mjs","mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,KAA0B;AAC/B,2BAA2B,mBAAO,CAAC,GAAQ,IAAI;AAC/C,GAAG,SAAS,IAA0C;AACtD,EAAE,iCAAO,CAAC,wBAAQ,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC,kBAAkB;AAC/C,GAAG,KAAK,EAEN;AACF,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ,YAAY;AACZ,gBAAgB;AAChB,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B,oEAAoE;AACpE;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,kCAAkC,IAAI;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA,sBAAsB;AACtB;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA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","sources":["webpack://worklogger/external module \"moment\"","webpack://worklogger/./node_modules/moment-timezone/moment-timezone.js","webpack://worklogger/./node_modules/moment-timezone/index.js","webpack://worklogger/./app/services/FileLoader/ lazy namespace object","webpack://worklogger/webpack/bootstrap","webpack://worklogger/webpack/runtime/compat get default export","webpack://worklogger/webpack/runtime/define property getters","webpack://worklogger/webpack/runtime/hasOwnProperty shorthand","webpack://worklogger/./app/models/RelativeTime.ts","webpack://worklogger/./app/models/Worklog.ts","webpack://worklogger/./app/models/WorklogSet.ts","webpack://worklogger/./app/models/Tag.ts","webpack://worklogger/./app/models/index.ts","webpack://worklogger/external module \"log4js\"","webpack://worklogger/./app/services/Logger/logger.ts","webpack://worklogger/./app/services/Logger/index.ts","webpack://worklogger/./app/conditions/HasTag/HasTagCondition.ts","webpack://worklogger/./app/conditions/SummaryMatches/SummaryMatchesCondition.ts","webpack://worklogger/./app/conditions/True/TrueCondition.ts","webpack://worklogger/./app/services/conditionLoader.ts","webpack://worklogger/./app/actions/AddTag/AddTagAction.ts","webpack://worklogger/./app/actions/RemoveTag/RemoveTagAction.ts","webpack://worklogger/./app/actions/AddTag/index.ts","webpack://worklogger/./app/services/actionLoader.ts","webpack://worklogger/./app/services/configurationProcessor.ts","webpack://worklogger/./app/formatters/FormatterBase.ts","webpack://worklogger/./app/outputs/OutputBase.ts","webpack://worklogger/external module \"@aws-sdk/client-sesv2\"","webpack://worklogger/external module \"mustache\"","webpack://worklogger/./app/outputs/AWS-SES/Output.ts","webpack://worklogger/./app/outputs/AWS-SES/index.ts","webpack://worklogger/external module \"node-fetch\"","webpack://worklogger/./app/services/HarvestClient/HarvestClient.ts","webpack://worklogger/./app/outputs/HarvestApp/Output.ts","webpack://worklogger/./app/services/HarvestClient/index.ts","webpack://worklogger/./app/outputs/HarvestApp/index.ts","webpack://worklogger/./app/outputs/JiraWorklog/JiraClient.ts","webpack://worklogger/./app/outputs/JiraWorklog/Output.ts","webpack://worklogger/./app/outputs/JiraWorklog/index.ts","webpack://worklogger/./app/outputs/Logger/Output.ts","webpack://worklogger/./app/outputs/Logger/index.ts","webpack://worklogger/external node-commonjs \"fs\"","webpack://worklogger/./app/outputs/TextFile/Output.ts","webpack://worklogger/./app/outputs/TextFile/index.ts","webpack://worklogger/./app/formatters/FormatterAggregator/Formatter.ts","webpack://worklogger/./app/formatters/FormatterConfigurationBase.ts","webpack://worklogger/./app/formatters/FormatterAggregator/FormatterConfiguration.ts","webpack://worklogger/./app/formatters/FormatterAggregator/index.ts","webpack://worklogger/./app/formatters/NoFormat/Formatter.ts","webpack://worklogger/external module \"showdown\"","webpack://worklogger/./app/formatters/SummaryText/Formatter.ts","webpack://worklogger/./app/formatters/SummaryText/SummaryTextFormatterConfiguration.ts","webpack://worklogger/./app/formatters/SummaryText/index.ts","webpack://worklogger/./app/formatters/SummaryHtml/Formatter.ts","webpack://worklogger/./app/formatters/SummaryHtml/SummaryHtmlFormatterConfiguration.ts","webpack://worklogger/./app/formatters/SummaryHtml/index.ts","webpack://worklogger/./app/formatters/TableList/Formatter.ts","webpack://worklogger/./app/formatters/TableList/FormatterConfiguration.ts","webpack://worklogger/./app/formatters/TableList/index.ts","webpack://worklogger/./app/formatters/TableListHtml/Formatter.ts","webpack://worklogger/./app/formatters/TableListHtml/FormatterConfiguration.ts","webpack://worklogger/./app/formatters/TableListHtml/index.ts","webpack://worklogger/./app/services/outputLoader.ts","webpack://worklogger/external module \"googleapis\"","webpack://worklogger/external module \"@aws-sdk/client-s3\"","webpack://worklogger/./app/services/FileLoader/S3FileLoader.ts","webpack://worklogger/./app/config/authConfiguration.ts","webpack://worklogger/./app/services/authHandler.ts","webpack://worklogger/./app/inputs/GoogleCalendar/Input.ts","webpack://worklogger/./app/inputs/GoogleCalendar/ModelMapper.ts","webpack://worklogger/./app/inputs/GoogleCalendar/index.ts","webpack://worklogger/./app/inputs/HarvestApp/Input.ts","webpack://worklogger/./app/inputs/HarvestApp/index.ts","webpack://worklogger/./app/services/inputLoader.ts","webpack://worklogger/external module \"minimist\"","webpack://worklogger/external node-commonjs \"path\"","webpack://worklogger/./app/services/FileLoader/LocalFileLoader.ts","webpack://worklogger/./start.ts","webpack://worklogger/./lambdaHandler.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE_moment__;","//! moment-timezone.js\n//! version : 0.5.47\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.47\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tfunction closest (num, arr) {\n\t\tvar len = arr.length;\n\t\tif (num < arr[0]) {\n\t\t\treturn 0;\n\t\t} else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {\n\t\t\treturn len - 1;\n\t\t} else if (num >= arr[len - 1]) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar mid;\n\t\tvar lo = 0;\n\t\tvar hi = len - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor((lo + hi) / 2);\n\t\t\tif (arr[mid] <= num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\treturn hi;\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\ti = closest(target, untils);\n\t\t\tif (i >= 0) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\tlastOffset = last.offset,\n\t\t\toffsets = [last],\n\t\t\tchange, next, nextOffset, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnextOffset = new Date(startYear, i, 1).getTimezoneOffset();\n\t\t\tif (nextOffset !== lastOffset) {\n\t\t\t\t// Create OffsetAt here to avoid unnecessary abbr parsing before checking offsets\n\t\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t\tlast = next;\n\t\t\t\tlastOffset = nextOffset;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\tcheckedOffsets = {},\n\t\t\ti, j, offset, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\toffset = offsets[i].offset;\n\t\t\tif (checkedOffsets.hasOwnProperty(offset)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tguessesOffset = guesses[offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedOffsets[offset] = true;\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tout  = moment.utc.apply(null, args),\n\t\t\tzone;\n\n\t\tif (!moment.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 983;\nmodule.exports = webpackEmptyAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import moment from \"moment-timezone\";\n\nexport enum Unit {\n    Hour = 'hour',\n    Day = 'day',\n    Week = 'week',\n    Month = 'month'\n}\n\nexport enum FromNow {\n    Last = 'last',\n    This = 'this',\n    Next = 'next'\n}\n\ntype DisplacementMapping = {\n    unit: string;\n    fromNow: string;\n    displacementFn: (dt: moment.Moment) => moment.Moment;\n};\n\nexport class RelativeTime {\n    private _displacementMappings: DisplacementMapping[] = this.buildDisplacementMappings() || [];\n\n    constructor(private fromNow: FromNow, private unit: Unit, private timeZone: string) {\n        this.buildDisplacementMappings();\n    }\n\n    private buildDisplacementMappings(): DisplacementMapping[] {\n        const getMap = function buildDisplacementMapping(unit: string, fromNow: string, displacementFn: (dt: moment.Moment) => moment.Moment) {\n            return {\n                unit,\n                fromNow,\n                displacementFn\n            }\n        }\n\n        return [\n            getMap(Unit.Hour, FromNow.Last, (dt: moment.Moment) => dt.startOf('hour').subtract(1, 'hours')),\n            getMap(Unit.Hour, FromNow.This, (dt: moment.Moment) => dt.startOf('hour')),\n            getMap(Unit.Hour, FromNow.Next, (dt: moment.Moment) => dt.startOf('hour').add(1, 'hours')),\n\n            getMap(Unit.Day, FromNow.Last, (dt: moment.Moment) => dt.startOf('day').subtract(1, 'day')),\n            getMap(Unit.Day, FromNow.This, (dt: moment.Moment) => dt.startOf('day')),\n            getMap(Unit.Day, FromNow.Next, (dt: moment.Moment) => dt.startOf('day').add(1, 'day')),\n\n            getMap(Unit.Week, FromNow.Last, (dt: moment.Moment) => dt.startOf('week').subtract(1, 'week')),\n            getMap(Unit.Week, FromNow.This, (dt: moment.Moment) => dt.startOf('week')),\n            getMap(Unit.Week, FromNow.Next, (dt: moment.Moment) => dt.startOf('week').add(1, 'week')),\n\n            getMap(Unit.Month, FromNow.Last, (dt: moment.Moment) => dt.startOf('month').subtract(1, 'month')),\n            getMap(Unit.Month, FromNow.This, (dt: moment.Moment) => dt.startOf('month')),\n            getMap(Unit.Month, FromNow.Next, (dt: moment.Moment) => dt.startOf('month').add(1, 'month')),\n        ];\n    }\n\n    toDate(): Date {\n        const displacementFn = this?._displacementMappings\n            .find(m => m.unit === this.unit && m.fromNow === this.fromNow)\n            ?.displacementFn\n            ?? ((dt) => dt);\n\n        const resultDate = moment.tz(this.timeZone);\n        displacementFn(resultDate);\n        return resultDate.toDate();\n    }\n}\n","import { Tag } from '.';\n\nexport class Worklog {\n    private tags: Map<string, Tag> = new Map();\n\n    constructor(public name: string, public startDateTime: Date, public endDateTime: Date) {\n        if (!startDateTime) throw new Error('Missing startDateTime parameter');\n        if (!endDateTime) throw new Error('Missing endDateTime parameter');\n    }\n\n    getDurationInMinutes(): number {\n        return Math.round((this.endDateTime.getTime() - this.startDateTime.getTime()) / (60 * 1000));\n    } \n\n    toString(): string {\n        let string = `${this.name || '(No name)'} (${this.getDurationInMinutes()} minutes)`;\n        for (const tagName of this.getTagKeys()) {\n            const tagValue = this.getTagValue(tagName);\n            string += `\\n    ${tagName}:${tagValue}`;\n        }\n        return string;\n    }\n\n    toOneLinerString(): string {\n        let string = `(${this.getShortDuration()}) ${this.name || '(No name)'}`;\n        for (const tagName of this.getTagKeys()) {\n            const tagValue = this.getTagValue(tagName);\n            string += ` [${tagName}:${tagValue}]`;\n        }\n        return string;\n    }\n\n    getShortDuration(): string {\n        const durationInMinutes = this.getDurationInMinutes();\n        const hours = Math.floor(durationInMinutes / 60);\n        const minutes = durationInMinutes % 60;\n\n        return `${hours}h ${minutes}m`\n    }\n\n    addTag(tag: Tag): void {\n        this.tags.set(tag.name, tag);\n    }\n\n    removeTag(tagName: string): void {\n        this.tags.delete(tagName);\n    }\n\n    getTagValue(name: string): string {\n        return this.tags.get(name)?.value;\n    }\n\n    getTagKeys(): string[] {\n        return Array.from(this.tags.keys());\n    }\n}","import { Worklog } from \".\";\n\ntype FilterFunction = (worklog: Worklog) => boolean;\n\nexport class WorklogSet {\n    constructor(public startDateTime: Date, public endDateTime: Date, public worklogs: Worklog[]) {\n        if (!(startDateTime instanceof Date)) throw new Error('Missing date parameter: startDateTime');\n        if (!(endDateTime instanceof Date)) throw new Error('Missing date parameter: endDateTime');\n    }\n\n    getFilteredCopy(filterFn: FilterFunction): WorklogSet {\n        const filteredWorklogs = this.worklogs.filter(filterFn);\n        return new WorklogSet(this.startDateTime, this.endDateTime, filteredWorklogs);\n    }\n\n    toString(): string {\n        return `${this.startDateTime.toISOString()} - ${this.endDateTime.toISOString()}`;\n    }\n}","export class Tag {\n    constructor (public name: string, public value: string) {\n        this.validateTagName(name);\n    }\n\n    private validateTagName(tagName: string): void {\n        if (!tagName) throw new Error('Tag names cannot be empty');\n    }\n}\n","export type { IAppConfiguration, AppConfigurationOptions, TimeSpecification } from './AppConfiguration';\nexport type { InputConfiguration } from './InputConfiguration';\nexport { RelativeTime } from './RelativeTime';\nexport type { IServiceRegistrations } from './ServiceRegistrations';\nexport { Worklog } from './Worklog';\nexport { WorklogSet } from './WorklogSet';\nexport { Tag } from './Tag';","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => (__WEBPACK_EXTERNAL_MODULE_log4js__[\"default\"]) });","import log4js from 'log4js';\n\nexport enum LoggerCategory {\n    App = 'app',\n    Actions = 'actions',\n    Conditions = 'conditions',\n    Formatters = 'formatters',\n    Inputs = 'inputs',\n    Outputs = 'outputs',\n    Services = 'services',\n}\n\nexport function getLogger(category: LoggerCategory): log4js.Logger {\n    return log4js.getLogger(category.toString());\n}\n\nexport function configureLogger(configuration: log4js.Configuration): void {\n    log4js.configure(configuration);\n}","export * from './logger';","import { Worklog } from \"../../models/Worklog\";\nimport { HasTagConditionConfiguration } from \"./HasTagConditionConfiguration\";\nimport { ICondition } from \"../ICondition\";\n\nexport class HasTagCondition implements ICondition {\n    constructor(private configuration: HasTagConditionConfiguration) { }\n\n    isSatisfiedBy(worklog: Worklog): boolean {\n        const checkTagValue = !!this.configuration.tagValue;\n        const worklogTagValue = worklog.getTagValue(this.configuration.tagName);\n\n        return checkTagValue\n            ? worklogTagValue == this.configuration.tagValue\n            : !!worklogTagValue;\n    }\n\n    toString(): string {\n        const tagValue = !this.configuration.tagValue\n            ? ''\n            : `: ${this.configuration.tagValue}`;\n        return `HasTag(${this.configuration.tagName}${tagValue})`;\n    }\n}","import { Worklog } from \"../../models\";\nimport { ICondition } from \"../ICondition\";\n\nexport type SummaryMatchesConditionConfiguration = {\n    regex: string;\n}\n\nexport class SummaryMatchesCondition implements ICondition {\n    private _regex: RegExp;\n\n    constructor(conditionConfiguration: SummaryMatchesConditionConfiguration) {\n        this._regex = new RegExp(conditionConfiguration.regex);\n    }\n\n    isSatisfiedBy(worklog: Worklog): boolean {\n        return this._regex.test(worklog.name);\n    }\n\n    toString(): string {\n        return `SummaryMatches(${this._regex.toString()})`;\n    }\n}","import { Worklog } from \"../../models/Worklog\";\nimport { ICondition } from \"../ICondition\";\n\nexport class TrueCondition implements ICondition {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isSatisfiedBy(worklog: Worklog): boolean {\n        return true;\n    }\n}","import { ICondition } from '../conditions/ICondition';\nimport { IConditionConfig } from '../conditions/IConditionConfig';\n\n// Loading these eagerly because dynamic imports mess up with the webpack build.\nimport { HasTagCondition } from '../conditions/HasTag';\nimport { SummaryMatchesCondition } from '../conditions/SummaryMatches';\nimport { TrueCondition } from '../conditions/True';\n\nconst conditionClasses = {\n    \"HasTag\": HasTagCondition,\n    \"SummaryMatches\": SummaryMatchesCondition,\n    \"True\": TrueCondition\n}\n\nexport async function loadCondition(conditionConfig: IConditionConfig): Promise<ICondition> {\n    let conditionType = (conditionConfig || {}).type;\n    if (!conditionType) conditionType = 'True';\n\n    const conditionClass = conditionClasses[conditionType];\n    if (!conditionClass)\n        throw new Error(`Condition ${conditionType} not recognized.`);\n\n    return new conditionClass(conditionConfig);\n}\n","import { getLogger, LoggerCategory } from '../../services/Logger';\n\nimport { Worklog } from '../../models/Worklog';\nimport { AddTagConfiguration } from './AddTagConfiguration';\nimport { AddTagDefinition } from './AddTagDefinition';\nimport { IAction } from '../IAction';\nimport { Tag } from '../../models';\n\nexport class AddTagAction implements IAction {\n    private _tagsToAdd: AddTagDefinition[];\n    private _logger = getLogger(LoggerCategory.Actions);\n\n    constructor(configuration: AddTagConfiguration) {\n        if (Array.isArray(configuration.tagsToAdd) && !configuration.tagsToAdd.length)\n            throw new Error('Configuration cannot be empty: tagsToAdd.');\n\n        if (configuration.tagsToAdd.some(tag => !tag))\n            throw new Error('Tags need to be valid tag-configuration objects.');\n\n        this._tagsToAdd = configuration.tagsToAdd;\n    }\n\n    _extractCaptureFromSummary(summary: string, regexText?: string): string | undefined {\n        try {\n            if (!regexText) return undefined;\n\n            const regex = new RegExp(regexText);\n            const result = regex.exec(summary);\n            if (!result) {\n                this._logger.trace(`Could not extract /${regexText}/ from worklog summary \"${summary}\" (no matches).`);\n                return undefined;\n            }\n\n            const matchedValue = result[1];\n            this._logger.trace(`Extracted /${regexText}/ from worklog summary \"${summary}\" => ${matchedValue}`);\n            return matchedValue;\n        } catch (e) {\n            this._logger.error(`Error while processing regex ${regexText} against text ${summary}`, e);\n            return undefined;\n        }\n    }\n\n    apply(worklog: Worklog): void {\n        if (!(worklog instanceof Worklog))\n            throw new Error('Apply: a Worklog is required.');\n\n        this._tagsToAdd.forEach(tagToAdd => {\n            const tagValue = tagToAdd.value || this._extractCaptureFromSummary(worklog.name, tagToAdd.extractCaptureFromSummary);\n            const tag = new Tag(tagToAdd.name, tagValue ?? '');\n            worklog.addTag(tag);\n        });\n    }\n\n    toString(): string {\n        const tags = this._tagsToAdd.map(t => `[${t.name}: ${t.value || `Regex(${t.extractCaptureFromSummary})`}]`)\n        return `AddTags: ${tags.join(' ')}`;\n    }\n}","import { getLogger, LoggerCategory } from '../../services/Logger';\nimport { Worklog } from '../../models/Worklog';\nimport { RemoveTagConfiguration } from './RemoveTagConfiguration';\nimport { IAction } from '../IAction';\n\nexport class RemoveTagAction implements IAction {\n    private _tagName: string;\n    private _logger = getLogger(LoggerCategory.Actions);\n\n    constructor(configuration: RemoveTagConfiguration) {\n        if (!configuration.tagName)\n            throw new Error('Configuration must include a tagName.');\n\n        this._tagName = configuration.tagName;\n    }\n\n    apply(worklog: Worklog): void {\n        if (!(worklog instanceof Worklog))\n            throw new Error('Apply: a Worklog is required.');\n\n        worklog.removeTag(this._tagName);\n        this._logger.trace(`Removed tag ${this._tagName} from worklog.`);\n    }\n\n    toString(): string {\n        return `RemoveTag: ${this._tagName}`;\n    }\n}\n","export { AddTagAction } from './AddTagAction';\nexport { AddTagDefinition } from './AddTagDefinition';\nexport { AddTagConfiguration } from './AddTagConfiguration';\nexport { RemoveTagAction } from '../RemoveTag/RemoveTagAction';\nexport { RemoveTagConfiguration } from '../RemoveTag/RemoveTagConfiguration';\n\nimport { AddTagAction } from './AddTagAction';\nexport default AddTagAction;\n","import { loadCondition } from './conditionLoader';\nimport { IAction } from '../actions/IAction'\nimport { ICondition } from '../conditions/ICondition';\nimport { IConditionConfig } from '../conditions/IConditionConfig';\n\nimport { getLogger, LoggerCategory } from '../services/Logger';\n\n// Loading these eagerly because dynamic imports mess up with the webpack build.\nimport { AddTagAction } from '../actions/AddTag';\n\nconst actionClasses = {\n    \"AddTag\": AddTagAction\n}\n\nconst logger = getLogger(LoggerCategory.Services);\n\nexport async function loadActionsAndConditions(actionConfigs: ITransformation[]): Promise<IActionWithCondition[]> {\n    return await Promise.all(actionConfigs.map(async config => {\n        const action = await loadAction(config.action) as IAction;\n        const condition = await loadCondition(config.condition) as ICondition;\n        logger.debug('Loaded: On condition', condition.toString(), 'apply action', action.toString());\n        return { action, condition };\n    }));\n}\n\nasync function loadAction(actionConfig: { type: string }) {\n    const actionClass = actionClasses[actionConfig.type];\n    if (!actionClass)\n        throw new Error(`Action ${actionConfig.type} not recognized.`);\n\n    return new actionClass(actionConfig);\n}\n\nexport interface ITransformation {\n    action: {\n        type: string\n    };\n    condition: IConditionConfig | undefined;\n}\n\nexport interface IActionWithCondition {\n    action: IAction;\n    condition: ICondition;\n}","import { RelativeTime } from '../models/RelativeTime';\nimport { IAppConfiguration } from '../models/AppConfiguration';\nimport { TimeSpecification } from '../models';\nimport moment from 'moment-timezone';\nimport { getLogger, LoggerCategory } from '../services/Logger';\n\nconst logger = getLogger(LoggerCategory.Services);\n\nexport type ParsedTimeFrame = {\n    start: Date;\n    end: Date;\n    timeZone: string;\n};\n\nexport function getProcessedConfiguration(configuration: IAppConfiguration): ParsedTimeFrame {\n    const { begin, end } = configuration.options.timePeriod;\n    const timeZone = configuration.options.timeZone || moment.tz.guess();\n\n    const parsedStart = parseAbsoluteTime(begin, timeZone) || parseRelativeTime(begin, timeZone) || parseOffset(begin, timeZone);\n    if (!parsedStart) {\n        logger.error('Could not parse a proper start date. Configuration:', { begin });\n        throw new Error('Could not parse a proper start date.');\n    }\n\n    const parsedEnd = parseAbsoluteTime(end, timeZone) || parseRelativeTime(end, timeZone) || parseOffset(end, timeZone);\n    if (!parsedEnd) {\n        logger.error('Could not parse a proper end date. Configuration:', { end });\n        throw new Error('Could not parse a proper end date.');\n    }\n\n    logger.info(`Range of dates to consider from inputs: ${parsedStart} - ${parsedEnd}`);\n    return { start: parsedStart, end: parsedEnd, timeZone };\n}\n\nfunction parseRelativeTime(timePeriod: TimeSpecification, timeZone: string) {\n    const { fromNow, unit } = timePeriod;\n    if (!fromNow || !unit) return null;\n\n    const relativeTime = new RelativeTime(fromNow, unit, timeZone);\n    return relativeTime.toDate();\n}\n\nfunction parseAbsoluteTime(timePeriod: TimeSpecification, timeZone: string) {\n    const dateTimeString = timePeriod.dateTime;\n    if (!(dateTimeString || '').length) return null;\n\n    return moment.tz(dateTimeString, timeZone).toDate();\n}\n\nfunction parseOffset(timePeriod: TimeSpecification, timeZone: string) {\n    const offset = timePeriod.offset;\n    if (!offset) return null;\n\n    const match = offset.match(/(?<value>(?:\\+|-)?\\d+)(?<unit>[mhwdM])?/);\n    if (!match) {\n        throw new Error(`Unrecognized offset setting: ${offset}`);\n    }\n    const { value, unit } = match.groups as unknown as { value: number, unit: moment.DurationInputArg2 };\n\n    return moment.tz(timeZone).add(value, unit).toDate();\n}","import { IAppConfiguration } from \"../models/AppConfiguration\";\nimport { WorklogSet } from \"../models/WorklogSet\";\nimport { FormatterConfigurationBase } from \"./FormatterConfigurationBase\";\n\nexport abstract class FormatterBase {\n    protected _configuration: FormatterConfigurationBase;\n    protected _appConfiguration: IAppConfiguration;\n\n    constructor(formatterConfiguration: FormatterConfigurationBase, appConfiguration: IAppConfiguration) {\n        if (!formatterConfiguration) throw new Error('Formatter configuration object is required.');\n        this._configuration = formatterConfiguration;\n        this._appConfiguration = appConfiguration;\n    }\n\n    abstract format(worklogSet: WorklogSet): Promise<string>;\n}\n","import { FormatterBase } from '../formatters/FormatterBase';\nimport { WorklogSet } from '../models/WorklogSet';\nimport { IOutputConfiguration } from '../outputs/IOutputConfiguration';\nimport { IAppConfiguration } from '../models/AppConfiguration';\n\nexport abstract class OutputBase {\n    public formatter: FormatterBase;\n    protected _appConfiguration: IAppConfiguration;\n\n    constructor(formatter: FormatterBase, outputConfiguration: IOutputConfiguration, appConfiguration: IAppConfiguration) {\n        if (!(formatter instanceof FormatterBase)) throw new Error('Formatter is required.');\n\n        this.formatter = formatter;\n        this._appConfiguration = appConfiguration;\n    }\n\n    abstract outputWorklogSet(worklogSet: WorklogSet): Promise<void>;\n\n    protected _outputWorklogSetValidation(worklogSet: WorklogSet): void {\n        if (!worklogSet) throw new Error('Required parameter: worklogSet.');\n    }\n}","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SESv2Client\"]: () => (__WEBPACK_EXTERNAL_MODULE__aws_sdk_client_sesv2_6677e3b1__.SESv2Client), [\"SendEmailCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__aws_sdk_client_sesv2_6677e3b1__.SendEmailCommand) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => (__WEBPACK_EXTERNAL_MODULE_mustache__[\"default\"]) });","import { OutputBase } from '../../outputs/OutputBase';\nimport { IAppConfiguration, WorklogSet } from '../../models';\nimport { FormatterBase } from '../../formatters/FormatterBase';\nimport { IAwsSesOutputConfiguration } from './IAwsSesOutputConfiguration';\n\nimport { getLogger, LoggerCategory } from '../../services/Logger';\nimport { SESv2Client, SendEmailCommand, SendEmailCommandInput } from '@aws-sdk/client-sesv2';\nimport mustache from 'mustache';\n\nexport class AwsSesOutput extends OutputBase {\n    private SES: SESv2Client;\n    private _configuration: IAwsSesOutputConfiguration;\n    private logger = getLogger(LoggerCategory.Outputs);\n    private name: string;\n\n    constructor(formatter: FormatterBase, outputConfiguration: IAwsSesOutputConfiguration, appConfiguration: IAppConfiguration) {\n        super(formatter, outputConfiguration, appConfiguration);\n        this._configuration = outputConfiguration;\n        this.name = outputConfiguration.name;\n\n        const region = this._configuration.aws.region;\n        this.SES = new SESv2Client({ region });\n    }\n\n    async outputWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        super._outputWorklogSetValidation(worklogSet);\n\n        const formattedOutput = await this.formatter.format(worklogSet);\n\n        const subject = mustache.render(this._configuration.subjectTemplate, worklogSet);\n        const body = mustache.render(this._configuration.bodyTemplate, { contents: formattedOutput, ...worklogSet });\n\n        const email: SendEmailCommandInput = {\n            FromEmailAddress: this._configuration.fromAddress,\n\n            Destination: {\n                ToAddresses: this._configuration.toAddresses\n            },\n\n            Content: {\n                Simple: {\n                    Body: {\n                        Html: {\n                            Charset: 'UTF-8',\n                            Data: '<html><body>' + body + '</body></html>'\n                        }\n                    },\n                    Subject: {\n                        Charset: 'UTF-8',\n                        Data: subject\n                    }\n                }\n            }\n        };\n\n        this.logger.debug(`[${this.name}] Email params:`, email, 'body:', body);\n        const command = new SendEmailCommand(email);\n        await this.SES.send(command);\n        this.logger.info(`[${this.name}] Successfully sent worklogSet to SES.`);\n    }\n}\n\nexport default AwsSesOutput;","export type { IAwsSesOutputConfiguration } from './IAwsSesOutputConfiguration';\nexport { AwsSesOutput } from './Output';","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => (__WEBPACK_EXTERNAL_MODULE_node_fetch_e2fb16d6__[\"default\"]) });","import { HarvestTimeEntry } from './Models';\nimport { HarvestProjectAndTasks } from './HarvestProjectAndTasks';\nimport { IHarvestConfiguration } from './IHarvestConfiguration';\nimport { IHarvestInternal_ProjectAssignmentResponse } from './IHarvestInternal_ProjectAssignmentResponse';\nimport fetch from 'node-fetch';\nimport { getLogger, LoggerCategory } from '../Logger';\n\nconst logger = getLogger(LoggerCategory.Services);\n\nexport class HarvestClient {\n    static HarvestBaseUrl = 'https://api.harvestapp.com/api/v2';\n\n    constructor(private configuration: IHarvestConfiguration) {\n        this.validateConfiguration(configuration);\n    }\n\n    private validateConfiguration(configuration: IHarvestConfiguration): void {\n        if (!configuration) throw new Error('Missing parameter: configuration.');\n        if (!configuration.accountId) throw new Error('Required configuration: accountId.');\n        if (!configuration.token) throw new Error('Required configuration: token.');\n        if (!configuration.contactInformation) throw new Error('Required configuration: contactInformation.');\n    }\n\n    async getTimeEntries({ from, to }: { from: Date, to: Date }): Promise<HarvestTimeEntry[]> {\n        logger.info('Retrieving time entries from Harvest');\n \n        const params = new URLSearchParams();\n        if (from) params.set('from', from.toISOString());\n        if (to) params.set('to', to.toISOString());\n\n        const response = await fetch(`${HarvestClient.HarvestBaseUrl}/time_entries?${params}`, {\n            headers: this.getDefaultHeaders()\n        });\n        const jsonResponse = await response.json() as { time_entries: HarvestTimeEntry[] };\n        logger.trace('Retrieved time entries from Harvest', jsonResponse);\n        return jsonResponse.time_entries;\n    }\n\n    async getProjectsAndTasks(): Promise<HarvestProjectAndTasks[]> {\n        logger.info('Retrieving known projects and tasks from Harvest');\n        const response = await fetch(`${HarvestClient.HarvestBaseUrl}/users/me/project_assignments.json`, {\n            headers: this.getDefaultHeaders()\n        });\n\n        const jsonResponse = await response.json() as IHarvestInternal_ProjectAssignmentResponse;\n        const projects = this.getProjectsAndTasksFromApiResponse(jsonResponse);\n        logger.trace('Projects and tasks retrieved from Harvest', JSON.stringify(projects));\n\n        return projects;\n    }\n\n    async saveNewTimeEntry(timeEntry: HarvestTimeEntry): Promise<void> {\n        this.validateTimeEntry(timeEntry);\n\n        logger.trace('Sending to Harvest:', JSON.stringify(timeEntry));\n        const res = await fetch(`${HarvestClient.HarvestBaseUrl}/time_entries`, {\n            method: 'POST',\n            body: JSON.stringify(timeEntry),\n            headers: this.getDefaultHeaders()\n        })\n\n        logger.trace(await res.json());\n    }\n\n    private validateTimeEntry(timeEntry: HarvestTimeEntry): void {\n        if (!timeEntry) throw new Error('Required parameter: timeEntry.');\n        if (!timeEntry.project_id) throw new Error('Time entry needs to have project_id.');\n        if (!timeEntry.task_id) throw new Error('Time entry needs to have task_id.');\n        if (!timeEntry.spent_date) throw new Error('Time entry needs to have spent_date.');\n        if (!timeEntry.hours) throw new Error('Time entry needs to have hours.');\n        if (!timeEntry.started_time) throw new Error('Time entry needs to have started_time.');\n        if (!timeEntry.ended_time) throw new Error('Time entry needs to have ended_time.');\n    }\n\n    private getProjectsAndTasksFromApiResponse(apiResponse: IHarvestInternal_ProjectAssignmentResponse): HarvestProjectAndTasks[] {\n        return apiResponse.project_assignments.map(pa => ({\n            projectId: pa.project.id,\n            projectName: pa.project.name,\n            tasks: pa.task_assignments.map(ta => ({\n                taskId: ta.task.id,\n                taskName: ta.task.name\n            }))\n        }));\n    }\n\n    private getDefaultHeaders(): Record<string, string> {\n        return {\n            'Authorization': `Bearer ${this.configuration.token}`,\n            'Harvest-Account-Id': `${this.configuration.accountId}`,\n            'User-Agent': `Worklogger (${this.configuration.contactInformation})`,\n            'Content-Type': 'application/json'\n        };\n    }\n}","import { OutputBase } from '../../outputs/OutputBase';\nimport { HarvestClient } from '../../services/HarvestClient/HarvestClient';\nimport { FormatterBase } from '../../formatters/FormatterBase';\nimport { IAppConfiguration, WorklogSet, Worklog } from '../../models';\nimport { HarvestProjectAndTasks, HarvestTask } from '../../services/HarvestClient';\nimport { IHarvestAppOutputConfiguration } from './IHarvestAppOutputConfiguration';\nimport { HarvestTimeEntry } from '.';\n\nimport * as moment from 'moment-timezone';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nexport class HarvestAppOutput extends OutputBase {\n    private logger = getLogger(LoggerCategory.Outputs);\n    private harvestClient: HarvestClient;\n    private configuration: IHarvestAppOutputConfiguration;\n    private name: string;\n\n    constructor(formatter: FormatterBase, outputConfiguration: IHarvestAppOutputConfiguration, appConfiguration: IAppConfiguration) {\n        super(formatter, outputConfiguration, appConfiguration);\n\n        this.harvestClient = new HarvestClient(outputConfiguration);\n        this.configuration = outputConfiguration;\n        this.name = outputConfiguration.name;\n    }\n\n    async outputWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        super._outputWorklogSetValidation(worklogSet);\n\n        const projects = await this.harvestClient.getProjectsAndTasks();\n        return await this.saveWorklogs(worklogSet.worklogs, projects);\n    }\n\n    private async saveWorklogs(worklogs: Worklog[], projects: HarvestProjectAndTasks[]): Promise<void> {\n        const timeEntries = this.mapWorklogsToTimeEntries(worklogs, projects);\n\n        const savingPromises = timeEntries.map(timeEntry => {\n            return this.harvestClient.saveNewTimeEntry(timeEntry);\n        });\n\n        return await Promise.all(savingPromises).then(p => {\n            const countText = `${p.length}` + (timeEntries.length != worklogs.length ? ` (out of ${worklogs.length})` : '');\n            this.logger.info(`[${this.name}] Sent ${countText} time entries to Harvest.`);\n        });\n    }\n\n    private mapWorklogsToTimeEntries(worklogs: Worklog[], projects: HarvestProjectAndTasks[]): HarvestTimeEntry[] {\n        return worklogs.map(w => {\n            const project = this.getProjectForWorklog(w, projects);\n            if (!project) return null;\n\n            const task = this.getTaskForWorklog(w, project);\n            if (!task) return null;\n\n            return this.getTimeEntryFromWorklogTaskAndProject(w, project, task);\n        }).filter(w => !!w);\n    }\n\n    private getTimeEntryFromWorklogTaskAndProject(worklog: Worklog, project: HarvestProjectAndTasks, task: HarvestTask): HarvestTimeEntry {\n        const timeZone = this._appConfiguration.options.timeZone;\n\n        const timeEntry: HarvestTimeEntry = {\n            project_id: project.projectId,\n            task_id: task.taskId,\n            spent_date: moment.tz(worklog.startDateTime, timeZone).format('YYYY-MM-DD'),\n            started_time: moment.tz(worklog.startDateTime, timeZone).format('hh:mma'),\n            ended_time: moment.tz(worklog.endDateTime, timeZone).format('hh:mma'),\n            hours: worklog.getDurationInMinutes() / 60,\n            notes: worklog.name,\n            is_running: false,\n            client: null,\n            project: null,\n            task: null\n        };\n\n        return timeEntry;\n    }\n\n    private getProjectForWorklog(worklog: Worklog, projects: HarvestProjectAndTasks[]): HarvestProjectAndTasks {\n        const projectTag = this.configuration.selectProjectFromTag || 'HarvestProject';\n        const projectTagValue = worklog.getTagValue(projectTag);\n        const project = projects.find(p => p.projectName == projectTagValue);\n\n        if (!project)\n            this.logger.warn(`[${this.name}] Harvest project \"${projectTagValue}\" not found (processing worklog ${worklog.toOneLinerString()}.`);\n\n        return project;\n    }\n\n    private getTaskForWorklog(worklog: Worklog, project: HarvestProjectAndTasks): HarvestTask {\n        const taskTag = this.configuration.selectTaskFromTag || 'HarvestTask';\n        const taskTagValue = worklog.getTagValue(taskTag);\n        const task = project.tasks.find(t => t.taskName == taskTagValue);\n\n        if (!task)\n            this.logger.warn(`[${this.name}] Harvest task \"${taskTagValue}\" not found.`);\n\n        return task;\n    }\n}\n\nexport default HarvestAppOutput;","export { HarvestClient } from './HarvestClient';\nexport type { HarvestProjectAndTasks } from './HarvestProjectAndTasks';\nexport type { HarvestTask } from './HarvestTask';\nexport type { IHarvestConfiguration } from './IHarvestConfiguration';\nexport type { IHarvestInternal_ProjectAssignment } from './IHarvestInternal_ProjectAssignment';\nexport type { IHarvestInternal_ProjectAssignmentResponse } from './IHarvestInternal_ProjectAssignmentResponse';\nexport type { IHarvestInternal_TaskAssignment } from './IHarvestInternal_TaskAssignment';\nexport { HarvestTimeEntry } from './Models';","export { HarvestAppOutput } from './Output';\nexport { HarvestTimeEntry } from '../../services/HarvestClient';","import { JiraWorklog, IJiraWorklogOutputConfiguration } from '.';\n\nimport fetch from 'node-fetch';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nexport interface IJiraClient {\n    saveWorklog(ticketId: string, worklog: JiraWorklog): Promise<void>;\n}\n\nexport class JiraClient implements IJiraClient {\n    private logger = getLogger(LoggerCategory.Outputs);\n\n    constructor(private config: IJiraWorklogOutputConfiguration) {\n        if (!config.JiraUrl) throw new Error('Required parameter: baseUrl.');\n        if (!config.JiraUsername) throw new Error('Required parameter: username.');\n        if (!config.JiraPassword) throw new Error('Required parameter: password.');\n    }\n\n    async saveWorklog(ticketId: string, worklog: JiraWorklog): Promise<void> {\n        this.validateTicketId(ticketId);\n        this.validateWorklog(worklog);\n\n        const url = `${this.config.JiraUrl}/rest/api/2/issue/${ticketId}/worklog`;\n        this.logger.debug('Sending to JIRA ', url, ':', worklog);\n\n        try {\n            const res = await fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(worklog),\n                headers: this.getHeaders()\n            });\n\n            this.logger.trace(res);\n\n            if (res.status != 201)\n                throw new Error(`${ticketId} could not be sent to JIRA, JIRA responded with ${res.status}: ${res.statusText}`);\n        } catch (e) {\n            this.logger.error(e); \n            throw e;\n        }\n    }\n\n    private getHeaders(): Record<string, string> {\n        return {\n            'Authorization': this.getAuthorizationValue(),\n            'Content-Type': 'application/json'\n        };\n    }\n\n    private validateTicketId(ticketId: string): void {\n        if (!ticketId) throw new Error('Required parameter: ticketId.');\n    }\n\n    private validateWorklog(worklog: JiraWorklog): void {\n        if (!worklog) throw new Error('Required parameter: worklog.');\n    }\n\n    private getAuthorizationValue(): string {\n        const encodedCredentials = Buffer.from(`${this.config.JiraUsername}:${this.config.JiraPassword}`).toString('base64');\n        return `Basic ${encodedCredentials}`;\n    }\n}\n","import { OutputBase } from '../OutputBase';\nimport { JiraClient } from './JiraClient';\nimport { FormatterBase } from '../../formatters/FormatterBase';\nimport { IAppConfiguration } from '../../models/AppConfiguration';\nimport { WorklogSet } from '../../models/WorklogSet';\nimport { Worklog } from '../../models/Worklog';\nimport { JiraWorklog } from './JiraWorklog';\nimport { IJiraWorklogOutputConfiguration } from './IJiraWorklogOutputConfiguration';\n\nimport * as moment from 'moment-timezone';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\ninterface IJiraTicketWithWorklog {\n    jiraTicket: string;\n    jiraWorklog: JiraWorklog;\n}\n\nexport class JiraWorklogOutput extends OutputBase {\n    private logger = getLogger(LoggerCategory.Outputs);\n    private _jiraClient: JiraClient;\n\n    constructor(formatter: FormatterBase, outputConfiguration: IJiraWorklogOutputConfiguration, appConfiguration: IAppConfiguration) {\n        super(formatter, outputConfiguration, appConfiguration);\n\n        this._jiraClient = new JiraClient(outputConfiguration);\n    }\n\n    async outputWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        super._outputWorklogSetValidation(worklogSet);\n\n        const filteredWorklogs = this.getWorklogsWithJiraTicket(worklogSet.worklogs);\n\n        const sendingToJiraPromises = filteredWorklogs.map(w => {\n            return this._jiraClient.saveWorklog(w.jiraTicket, w.jiraWorklog);\n        });\n\n        return await Promise.all(sendingToJiraPromises).then(p => {\n            this.logger.info(`Sent ${p.length} worklogs to JIRA.`);\n        });\n    }\n\n    private getWorklogsWithJiraTicket(worklogs: Worklog[]): IJiraTicketWithWorklog[] {\n        const filteredWorklogs: IJiraTicketWithWorklog[] = [];\n        (worklogs || []).forEach(w => {\n            const jiraTicketTagValue = w.getTagValue('JiraTicket');\n            if (!jiraTicketTagValue) {\n                this.logger.warn(`Not sent to JIRA, missing JiraTicket: ${w.toOneLinerString()}`);\n            } else {\n                filteredWorklogs.push({ jiraTicket: jiraTicketTagValue, jiraWorklog: this.mapToJiraWorklog(w) });\n            }\n        });\n        return filteredWorklogs;\n    }\n\n    private mapToJiraWorklog(worklog: Worklog): JiraWorklog {\n        const timeZone = this._appConfiguration.options.timeZone;\n\n        return {\n            comment: worklog.name,\n            started: moment.tz(worklog.startDateTime, timeZone).format('YYYY-MM-DDTHH:mm:ss.SSSZZ'),\n            timeSpent: worklog.getDurationInMinutes() + 'm'\n        };\n    }\n}\n\nexport default JiraWorklog;","export { JiraClient } from './JiraClient';\nexport type { IJiraClient } from './JiraClient';\nexport { JiraWorklog } from './JiraWorklog';\nexport { JiraWorklogOutput } from './Output';\nexport type { IJiraWorklogOutputConfiguration } from './IJiraWorklogOutputConfiguration';","import { OutputBase } from '../OutputBase';\nimport { WorklogSet } from '../../models/WorklogSet';\n\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nexport class LoggerOutput extends OutputBase {\n    private _logger = getLogger(LoggerCategory.Outputs);\n\n    async outputWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        super._outputWorklogSetValidation(worklogSet);\n\n        const formattedOutput = await this.formatter.format(worklogSet);\n\n        this._logger.info(formattedOutput);\n    }\n}\n\nexport default LoggerOutput;","export { LoggerOutput } from './Output';","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","import { promises as fs } from 'fs';\nimport { OutputBase } from '../OutputBase';\nimport { FormatterBase } from '../../formatters/FormatterBase';\nimport { IAppConfiguration } from '../../models/AppConfiguration';\nimport { WorklogSet } from '../../models/WorklogSet';\nimport { ITextFileOutputConfiguration } from './ITextFileOutputConfiguration';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nconst logger = getLogger(LoggerCategory.Outputs);\n\nexport class TextFileOutput extends OutputBase {\n    private _configuration: ITextFileOutputConfiguration;\n\n    constructor(formatter: FormatterBase, outputConfiguration: ITextFileOutputConfiguration, appConfiguration: IAppConfiguration) {\n        super(formatter, outputConfiguration, appConfiguration);\n        this._configuration = outputConfiguration;\n    }\n\n    async outputWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        super._outputWorklogSetValidation(worklogSet);\n\n        const formattedOutput = await this.formatter.format(worklogSet);\n\n        try {\n            const filename = this._configuration.filePath;\n            logger.info('Writing output to', filename);\n            await fs.writeFile(filename, formattedOutput);\n        } catch (err) {\n            logger.error('Error while writing output', err);\n            throw err;\n        }\n    }\n}\n\nexport default TextFileOutput;","export { TextFileOutput } from './Output';","import { WorklogSet } from \"../../models\";\nimport { getLogger, LoggerCategory } from \"../../services/Logger\";\nimport { FormatterBase } from \"../FormatterBase\";\nimport { FormatterAggregatorFormatterConfiguration } from \"./FormatterConfiguration\";\nimport { loadFormatter } from \"../../services/outputLoader\";\n\nconst logger = getLogger(LoggerCategory.Formatters);\n\nexport class FormatterAggregatorFormatter extends FormatterBase {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        if (!(worklogSet instanceof WorklogSet)) throw new Error('Missing WorklogSet.');\n\n        const configuration = this._configuration as FormatterAggregatorFormatterConfiguration;\n        logger.debug(`Formatting worklog set with ${configuration.formatters.length} formatters.`);\n        const formatterPromises = configuration.formatters.map(config => loadFormatter(config, this._appConfiguration));\n        const formatters = await Promise.all(formatterPromises);\n        logger.debug(`Loaded ${formatters.length} formatters.`);\n\n        const outputPromises = formatters.map(formatter => formatter.format(worklogSet));\n        const outputs = await Promise.all(outputPromises);\n        logger.debug(`Aggregated ${outputs.length} outputs.`);\n\n        logger.debug(`Aggregated outputs: ${outputs.join('\\n\\n')}`);\n        return outputs.join('\\n\\n');\n    }\n}\n\nexport default FormatterAggregatorFormatter;","export class FormatterConfigurationBase {\n    public type = '';\n}\n","import { FormatterConfigurationBase } from \"../FormatterConfigurationBase\";\n\nexport class FormatterAggregatorFormatterConfiguration extends FormatterConfigurationBase\n{\n    public type = \"FormatterAggregator\";\n\n    constructor(public formatters: FormatterConfigurationBase[]) {\n        super();\n\n        if (!formatters || !formatters.length)\n            throw new Error(\"Missing formatters.\");\n    }\n}\n","export { FormatterAggregatorFormatter } from './Formatter';\nexport { FormatterAggregatorFormatterConfiguration } from './FormatterConfiguration';","import { FormatterBase } from '../FormatterBase';\nimport { WorklogSet } from '../../models/WorklogSet';\n\nexport class NoFormatFormatter extends FormatterBase {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        return worklogSet.toString();\n    }\n}\n\nexport default NoFormatFormatter;","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => (__WEBPACK_EXTERNAL_MODULE_showdown__[\"default\"]) });","import { WorklogSet } from '../../models/WorklogSet';\nimport { FormatterBase } from '../FormatterBase';\nimport { Worklog } from '../../models/Worklog';\nimport { SummaryTextFormatterConfiguration } from './SummaryTextFormatterConfiguration';\nimport * as moment from 'moment-timezone';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nconst logger = getLogger(LoggerCategory.Formatters);\n\nexport class SummaryTextFormatter extends FormatterBase {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        if (!(worklogSet instanceof WorklogSet)) throw new Error('Missing WorklogSet.');\n\n        let outputLines: string[] = [];\n\n        const timeZone = this._appConfiguration.options.timeZone;\n        const startDateTime = moment.tz(worklogSet.startDateTime, timeZone).format();\n        const endDateTime = moment.tz(worklogSet.endDateTime, timeZone).format();\n        outputLines.push(`Worklogs from ${startDateTime} to ${endDateTime}.`);\n        outputLines.push('');\n\n        const aggregations = this._generateAggregations(worklogSet);\n        if (aggregations.length) { \n            outputLines = outputLines.concat(...aggregations);\n        }\n\n        const totalDurationMinutes = this._getWorklogDurationSumInMinutes(worklogSet.worklogs);\n        const totalDurationString = this._getTotalHsMsString(totalDurationMinutes);\n        outputLines.push(`Total time: ${totalDurationString}`);\n\n        const output = outputLines.join('\\n');\n        logger.debug('SummaryTextFormatter output:', output);\n        return output;\n    }\n\n    _getWorklogDurationSumInMinutes(worklogs: Worklog[]): number {\n        return worklogs\n            .map(w => w.getDurationInMinutes())\n            .reduce((d1, d2) => d1 + d2, 0);\n    }\n\n    _getTotalHsMsString(totalDurationMinutes: number): string {\n        const totalHours = Math.floor(totalDurationMinutes / 60);\n        const minutes = Math.floor(totalDurationMinutes % 60);\n\n        return `${totalHours}hs ${minutes}m`;\n    }\n\n    _generateAggregations(worklogSet: WorklogSet): string[][] {\n        const configuration = this._configuration as SummaryTextFormatterConfiguration;\n\n        if (!configuration.aggregateByTags || !configuration.aggregateByTags.length) return [];\n\n        return configuration.aggregateByTags\n            .map(tags => {\n                // Get worklogs that have at least one of the required tags\n                const taggedWorklogs = worklogSet.worklogs.filter(w => \n                    tags.some(tag => w.getTagValue(tag) !== undefined)\n                );\n                \n                // Calculate non-tagged time\n                const nonTaggedWorklogs = worklogSet.worklogs.filter(w => \n                    tags.every(tag => w.getTagValue(tag) === undefined)\n                );\n                const nonTaggedDurationMinutes = this._getWorklogDurationSumInMinutes(nonTaggedWorklogs);\n                const nonTaggedDurationString = this._getTotalHsMsString(nonTaggedDurationMinutes);\n\n                const aggregationLines = this._generateAggregationLines(taggedWorklogs, tags);\n                return [\n                    `Total time by ${tags.join(' / ')}: (excluding non-tagged: ${nonTaggedDurationString})`,\n                    '',\n                    ...aggregationLines,\n                    ''\n                ];\n            });\n    }\n\n    _generateAggregationLines(worklogs: Worklog[], tags: string[], indentationLevel = 1): string[] {\n        if (!worklogs || !worklogs.length || !tags || !tags.length) return [];\n\n        const [firstTag, ...restTags] = tags;\n        const worklogsByTagValue = this._groupBy(worklogs, firstTag);\n\n        let aggregatedSummaries: string[] = [];\n        for (const worklogGrouping of worklogsByTagValue) {\n            // Skip entries with no key value\n            if (!worklogGrouping.key) {\n                continue;\n            }\n            \n            const groupingTagValue = worklogGrouping.key;\n            const workslogsInGroup = worklogGrouping.value;\n\n            const groupedDurationInMinutes = this._getWorklogDurationSumInMinutes(workslogsInGroup);\n            const groupedDurationString = this._getTotalHsMsString(groupedDurationInMinutes);\n\n            const indentation = ' '.repeat((indentationLevel - 1) * 4);\n            aggregatedSummaries.push(`${indentation}- [${firstTag}] ${groupingTagValue}: ${groupedDurationString}`);\n            aggregatedSummaries = aggregatedSummaries.concat(...this._generateAggregationLines(workslogsInGroup, restTags, indentationLevel + 1));\n        }\n\n        return aggregatedSummaries;\n    }\n\n    _groupBy(worklogs: Worklog[], tag: string): { key: string, value: Worklog[] }[] {\n        const groupKeys = [];\n        const groupValuesByGroupKey: Record<string, Worklog[]> = {};\n\n        for (const worklog of worklogs) {\n            const tagValue = worklog.getTagValue(tag);\n\n            // using Array.indexOf instead of !!groupValuesByGroupKey[tagValue]\n            // prevents weird issues like tags with values \"length\" or \"toString\", etc.\n            if (groupKeys.indexOf(tagValue) === -1) {\n                groupKeys.push(tagValue);\n                groupValuesByGroupKey[tagValue] = [worklog];\n            } else {\n                groupValuesByGroupKey[tagValue].push(worklog);\n            }\n        }\n\n        const keyValueGroups = [];\n        for (const key of groupKeys) {\n            keyValueGroups.push({ key, value: groupValuesByGroupKey[key] });\n        }\n\n        return keyValueGroups;\n    }\n}\n\nexport default SummaryTextFormatter;","import { FormatterConfigurationBase } from \"../FormatterConfigurationBase\";\n\nexport class SummaryTextFormatterConfiguration extends FormatterConfigurationBase\n{\n    public type = 'SummaryText';\n    constructor(public aggregateByTags: string[][]) {\n        super();\n    }\n}\n","export { SummaryTextFormatter } from './Formatter';\nexport { SummaryTextFormatterConfiguration } from './SummaryTextFormatterConfiguration';","import showdown from 'showdown';\nimport { WorklogSet } from '../../models/WorklogSet';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\nimport { SummaryTextFormatter } from '../SummaryText';\nimport { SummaryHtmlFormatterConfiguration } from '.';\n\nconst logger = getLogger(LoggerCategory.Formatters);\n\nexport class SummaryHtmlFormatter extends SummaryTextFormatter {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        const summaryText = await super.format(worklogSet);\n\n        logger.debug('Initializing markdown converter');\n        const configuration = this._configuration as SummaryHtmlFormatterConfiguration;\n        const markdownConverter = new showdown.Converter(configuration);\n\n        logger.debug('Converting summary to html');\n        const output = markdownConverter.makeHtml(summaryText);\n\n        logger.debug('SummaryHtmlFormatter output:', output);\n        return output;\n    }\n}\n\nexport default SummaryHtmlFormatter;","import { SummaryTextFormatterConfiguration } from \"../SummaryText\";\n\nexport class SummaryHtmlFormatterConfiguration extends SummaryTextFormatterConfiguration\n{\n    public type = 'SummaryHtml';\n}\n","export { SummaryHtmlFormatter } from './Formatter';\nexport { SummaryHtmlFormatterConfiguration } from './SummaryHtmlFormatterConfiguration';","import * as moment from \"moment-timezone\";\nimport { Worklog, WorklogSet } from \"../../models\";\nimport { getLogger, LoggerCategory } from \"../../services/Logger\";\nimport { FormatterBase } from \"../FormatterBase\";\n\nconst logger = getLogger(LoggerCategory.Formatters);\n\nexport class TableListFormatter extends FormatterBase {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        if (!(worklogSet instanceof WorklogSet)) throw new Error('Missing WorklogSet.');\n\n        const uniqueTagList = this._getUniqueTagList(worklogSet);\n        const outputLines = this._generateOutputLines(worklogSet, uniqueTagList);\n        const output = outputLines.join('\\n');\n\n        logger.debug('TableListFormatter output:', output);\n        return output;\n    }\n\n    _getUniqueTagList(worklogSet: WorklogSet): string[] {\n        const uniqueTagList = worklogSet.worklogs\n            .map(w => w.getTagKeys())\n            .reduce((a, b) => a.concat(b), [])\n            .filter((value, index, self) => self.indexOf(value) === index);\n        logger.debug('Unique tag list:', uniqueTagList);\n        return uniqueTagList;\n    }\n\n    _generateOutputLines(worklogSet: WorklogSet, uniqueTagList: string[]): string[] {\n        const headerLine = this._generateHeaderLineAndSeparator(uniqueTagList);\n        const worklogLines = this._generateWorklogLines(worklogSet, uniqueTagList);\n        const notes = this._getFootnotes();\n\n        return [headerLine, ...worklogLines, ...notes];\n    }\n\n    _getFootnotes(): string[] {\n        const timeZone = this._appConfiguration.options.timeZone;\n        const timeZoneName = moment.tz(timeZone).zoneAbbr();\n        const timeZoneNote = `All times are in ${timeZoneName} time.`;\n\n        return ['', '', timeZoneNote];\n    }\n\n    _generateHeaderLineAndSeparator(uniqueTagList: string[]): string {\n        const tagTitles = uniqueTagList.map(tag => `Tag: ${tag}`);\n        const titles = ['Date', 'Start Time', 'End Time', 'Duration', 'Title', ...tagTitles];\n\n        const headerLine = titles.join(' | ');\n\n        const separatorLine = titles\n            .map(() => '---')\n            .join(' | ');\n\n        return `${headerLine}\\n${separatorLine}`;\n    }\n\n    _generateWorklogLines(worklogSet: WorklogSet, uniqueTagList: string[]): string[] {\n        return worklogSet.worklogs\n            .map(w => this._generateWorklogLine(w, uniqueTagList))\n            .filter(l => l);\n    }\n\n    _generateWorklogLine(worklog: Worklog, uniqueTagList: string[]): string {\n        const timeZone = this._appConfiguration.options.timeZone;\n        const timeFormatString = 'HH:mm';\n        const startDate = moment.tz(worklog.startDateTime, timeZone).format('YYYY-MM-DD');\n        const startDateTime = moment.tz(worklog.startDateTime, timeZone).format(timeFormatString);\n        const endDateTime = moment.tz(worklog.endDateTime, timeZone).format(timeFormatString);\n        const duration = worklog.getShortDuration();\n        const title = worklog.name;\n        const tags = uniqueTagList.map(tag => worklog.getTagValue(tag) || '');\n\n        const line = [startDate, startDateTime, endDateTime, duration, title, ...tags].join(' | ');\n        return line;\n    }\n}\n\nexport default TableListFormatter;","import { FormatterConfigurationBase } from \"../FormatterConfigurationBase\";\n\nexport class TableListFormatterConfiguration extends FormatterConfigurationBase\n{\n    public type = \"TableList\";\n}\n","export { TableListFormatter } from './Formatter';\nexport { TableListFormatterConfiguration } from './FormatterConfiguration';","import showdown from 'showdown';\nimport { WorklogSet } from '../../models/WorklogSet';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\nimport { TableListFormatter } from '../TableList';\nimport { TableListHtmlFormatterConfiguration } from '.';\n\nconst logger = getLogger(LoggerCategory.Formatters);\n\nexport class TableListHtmlFormatter extends TableListFormatter {\n    async format(worklogSet: WorklogSet): Promise<string> {\n        const summaryText = await super.format(worklogSet);\n\n        logger.debug('Initializing markdown converter');\n        const configuration = this._configuration as TableListHtmlFormatterConfiguration;\n        const markdownConverter = new showdown.Converter({\n            ...configuration,\n            tables: true,\n        });\n\n        logger.debug('Converting summary to html');\n        const output = markdownConverter.makeHtml(summaryText);\n\n        logger.debug('TableListHtmlFormatter output:', output);\n        return output;\n    }\n}\n\nexport default TableListHtmlFormatter;","import { TableListFormatterConfiguration } from \"../TableList\";\n\nexport class TableListHtmlFormatterConfiguration extends TableListFormatterConfiguration\n{\n    public type = 'TableListHtml';\n}\n","export { TableListHtmlFormatter } from './Formatter';\nexport { TableListHtmlFormatterConfiguration } from './FormatterConfiguration';","import { loadCondition } from './conditionLoader';\nimport { IOutputConfiguration } from '../outputs/IOutputConfiguration';\nimport { IAppConfiguration } from '../models/AppConfiguration';\nimport { OutputWithCondition } from './OutputWithCondition';\nimport { IFormatterConfig } from '../formatters/IFormatterConfig';\nimport { OutputBase } from '../outputs/OutputBase';\nimport { FormatterBase } from '../formatters/FormatterBase';\nimport { getLogger, LoggerCategory } from '../services/Logger';\n\nconst logger = getLogger(LoggerCategory.Services);\n\n// Loading these eagerly because dynamic imports mess up with the webpack build.\nimport { AwsSesOutput } from '../outputs/AWS-SES';\nimport { HarvestAppOutput } from '../outputs/HarvestApp';\nimport { JiraWorklogOutput } from '../outputs/JiraWorklog';\nimport { LoggerOutput } from '../outputs/Logger';\nimport { TextFileOutput } from '../outputs/TextFile';\n\nconst outputClasses = {\n    \"AWS-SES\": AwsSesOutput,\n    \"HarvestApp\": HarvestAppOutput,\n    \"JiraWorklog\": JiraWorklogOutput,\n    \"Logger\": LoggerOutput,\n    \"TextFile\": TextFileOutput\n}\n\n// Loading these eagerly because dynamic imports mess up with the webpack build.\nimport { FormatterAggregatorFormatter } from '../formatters/FormatterAggregator';\nimport { NoFormatFormatter } from '../formatters/NoFormat';\nimport { SummaryHtmlFormatter } from '../formatters/SummaryHtml';\nimport { SummaryTextFormatter } from '../formatters/SummaryText';\nimport { TableListFormatter } from '../formatters/TableList';\nimport { TableListHtmlFormatter } from '../formatters/TableListHtml';\n\nconst formatterClasses = {\n    \"FormatterAggregator\": FormatterAggregatorFormatter,\n    \"NoFormat\": NoFormatFormatter,\n    \"SummaryHtml\": SummaryHtmlFormatter,\n    \"SummaryText\": SummaryTextFormatter,\n    \"TableList\": TableListFormatter,\n    \"TableListHtml\": TableListHtmlFormatter\n}\n\nexport async function loadOutputs(outputConfigurations: IOutputConfiguration[], appConfiguration: IAppConfiguration): Promise<OutputWithCondition[]> {\n    return Promise.all(outputConfigurations.map(async outputConfig => {\n        const output = await loadOuput(outputConfig, appConfiguration);\n        const condition = await loadCondition(outputConfig.condition);\n        const excludeFromNonProcessedWarning = !!outputConfig.excludeFromNonProcessedWarning;\n        return { output, condition, excludeFromNonProcessedWarning };\n    }));\n}\n\nasync function loadOuput(outputConfiguration: IOutputConfiguration, appConfiguration: IAppConfiguration): Promise<OutputBase> {\n    const outputType = outputConfiguration.type;\n    const formatter = await loadFormatter(outputConfiguration.formatter, appConfiguration);\n\n    const outputClass = outputClasses[outputType];\n    if (!outputClass)\n        throw new Error(`Output ${outputType} not recognized.`);\n\n    return new outputClass(formatter, outputConfiguration, appConfiguration);\n}\n\nexport async function loadFormatter(formatterConfiguration: IFormatterConfig | undefined, appConfiguration: IAppConfiguration): Promise<FormatterBase> {\n    if (!formatterConfiguration)\n        formatterConfiguration = { type: 'NoFormat' };\n\n    const formatterType = formatterConfiguration?.type || 'NoFormat';\n\n    logger.debug(`Loading ${formatterType} formatter`);\n\n    const formatterClass = formatterClasses[formatterType];\n    if (!formatterClass)\n        throw new Error(`Formatter ${formatterType} not recognized.`);\n\n    return new formatterClass(formatterConfiguration, appConfiguration);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"google\"]: () => (__WEBPACK_EXTERNAL_MODULE_googleapis__.google) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"GetObjectCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__aws_sdk_client_s3_166f32a4__.GetObjectCommand), [\"PutObjectCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__aws_sdk_client_s3_166f32a4__.PutObjectCommand), [\"S3Client\"]: () => (__WEBPACK_EXTERNAL_MODULE__aws_sdk_client_s3_166f32a4__.S3Client) });","import { GetObjectCommand, PutObjectCommand, S3Client } from '@aws-sdk/client-s3';\nimport { IFileLoader } from './IFileLoader';\nimport { getLogger, LoggerCategory } from '../Logger';\nimport { Readable } from 'stream';\n\nconst logger = getLogger(LoggerCategory.Services);\n\nexport class S3FileLoader implements IFileLoader {\n    private s3Bucket: string;\n\n    constructor(s3Bucket: string) {\n        this.s3Bucket = s3Bucket;\n    }\n\n    async loadJson(filePath: string): Promise<Record<string, unknown>> {\n        const requestParams = {\n            Bucket: this.s3Bucket,\n            Key: filePath\n        };\n\n        logger.info(`Loading from S3 bucket: ${requestParams.Bucket}/${requestParams.Key}`)\n\n        try {\n            const s3 = new S3Client({ });\n            const data = await s3.send(new GetObjectCommand(requestParams));\n            const json = await this.streamToString(data.Body as Readable);\n\n            if (!json) throw new Error(`Did not receive any data from ${requestParams.Bucket}/${requestParams.Key}`);\n\n            return JSON.parse(json);\n        } catch (err) {\n            logger.error(`Error while retrieving ${requestParams.Bucket}/${requestParams.Key}`, err);\n            throw err;\n        }\n    }\n\n    async saveFile(filePath: string, fileContents: string): Promise<void> {\n        const requestParams = {\n            Bucket: this.s3Bucket,\n            Key: filePath,\n            Body: fileContents\n        };\n\n        logger.info(`Saving to S3 bucket: ${requestParams.Bucket}/${requestParams.Key}`)\n\n        try {\n            const s3 = new S3Client({ });\n            await s3.send(new PutObjectCommand(requestParams));\n        } catch (err) {\n            logger.error(`Error while saving ${requestParams.Bucket}/${requestParams.Key}`, err);\n            throw err;\n        }\n    }\n\n    private async streamToString(stream: Readable): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const chunks: string[] = [];\n\n            stream.on('data', chunk => chunks.push(chunk.toString()));\n            stream.once('end', () => resolve(chunks.join('')));\n            stream.once('error', reject);\n        });\n    }\n}\n","export const BUCKET_OR_FOLDER_NAME = \"worklogger\";\nexport const GOOGLE_USER_CREDENTIALS_FILE_NAME = \"google-user-credentials.json\";\nexport const GOOGLE_APPLICATION_CREDENTIALS_FILE_NAME = \"google-application-credentials.json\";\n","import { google } from 'googleapis';\nimport { S3FileLoader } from './FileLoader/S3FileLoader';\nimport { BUCKET_OR_FOLDER_NAME, GOOGLE_APPLICATION_CREDENTIALS_FILE_NAME, GOOGLE_USER_CREDENTIALS_FILE_NAME } from '../config/authConfiguration';\nimport { OAuth2Client } from 'google-auth-library';\n\nasync function getAppAuthenticatedOAuthClient(): Promise<OAuth2Client> {\n    const s3FileLoader = new S3FileLoader(BUCKET_OR_FOLDER_NAME);\n    const authFileJson = await s3FileLoader.loadJson(GOOGLE_APPLICATION_CREDENTIALS_FILE_NAME);\n    const { client_id, client_secret, redirect_uris } = authFileJson.web as { client_id: string, client_secret: string, redirect_uris: string[] };\n    const oauth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris[0]);\n    return oauth2Client;\n}\n\nexport async function getUserAuthenticatedOAuthClient(): Promise<OAuth2Client> {\n    const oauth2Client = await getAppAuthenticatedOAuthClient();\n    const s3FileLoader = new S3FileLoader(BUCKET_OR_FOLDER_NAME);\n    const userCredentialsFileJson = await s3FileLoader.loadJson(GOOGLE_USER_CREDENTIALS_FILE_NAME);\n    oauth2Client.setCredentials(userCredentialsFileJson);\n    return oauth2Client;\n}\n\nexport async function storeGoogleTokenFromCode(oauthCode: string) {\n    const oauth2Client = await getAppAuthenticatedOAuthClient();\n    const { tokens } = await oauth2Client.getToken(oauthCode);\n\n    const s3FileLoader = new S3FileLoader(BUCKET_OR_FOLDER_NAME);\n    await s3FileLoader.saveFile(GOOGLE_USER_CREDENTIALS_FILE_NAME, JSON.stringify(tokens));\n}\n\nexport async function generateAuthUrl(): Promise<string> {\n    const oauth2Client = await getAppAuthenticatedOAuthClient();\n\n    const scopes = [\n        \"https://www.googleapis.com/auth/calendar.events.readonly\"\n    ];\n\n    const authorizationUrl = oauth2Client.generateAuthUrl({\n        access_type: 'offline',\n        scope: scopes,\n        include_granted_scopes: true\n    });\n    return authorizationUrl;\n}","import { getLogger, LoggerCategory } from '../../services/Logger';\nimport { google, Auth } from 'googleapis';\n\nimport { IAppConfiguration, IServiceRegistrations, Worklog } from '../../models';\nimport { getUserAuthenticatedOAuthClient } from '../../services/authHandler';\n\nimport { IApiResponse, ModelMapper, GoogleCalendarConfiguration, GoogleCalendarCalendarConfiguration } from '.';\nimport { IInput } from '../IInput';\n\nexport class Input implements IInput {\n    private logger = getLogger(LoggerCategory.Inputs);\n    private modelMapper: ModelMapper = new ModelMapper();\n    private inputConfiguration: GoogleCalendarConfiguration;\n\n    constructor(\n        serviceRegistrations: IServiceRegistrations,\n        appConfiguration: IAppConfiguration,\n        inputConfiguration: GoogleCalendarConfiguration\n    ) {\n        if (!serviceRegistrations)\n            throw new Error('ServiceRegistrations for GoogleCalendarInput is required');\n\n        if (!inputConfiguration)\n            throw new Error('Configuration for GoogleCalendarInput is required');\n\n        this.inputConfiguration = inputConfiguration;\n        this.name = inputConfiguration.name;\n    }\n\n    name: string;\n\n    async getWorkLogs(startDateTime: Date, endDateTime: Date): Promise<Worklog[]> {\n        this.logger.info(`Retrieving worklogs from Google Calendar between ${startDateTime} and ${endDateTime}`);\n        const oauth2Client = await getUserAuthenticatedOAuthClient();\n        const apiResponses = await this._getEventsFromApi(oauth2Client, startDateTime, endDateTime);\n        return this.modelMapper.map(apiResponses);\n    }\n\n    async _getEventsFromApi(auth: Auth.OAuth2Client, startDateTime: Date, endDateTime: Date): Promise<IApiResponse[]> {\n        const calendarReturnPromises = this.inputConfiguration.calendars\n            .map(calendarInfo => this._getEventsFromApiSingleCalendar(auth, calendarInfo, startDateTime, endDateTime));\n        return await Promise.all(calendarReturnPromises);\n    }\n\n    async _getEventsFromApiSingleCalendar(auth: Auth.OAuth2Client, calendar: GoogleCalendarCalendarConfiguration, startDateTime: Date, endDateTime: Date): Promise<IApiResponse> {\n        this.logger.debug('Filtering calendar events from', startDateTime, 'to', endDateTime);\n\n        this.logger.debug('Retrieving entries from calendar', calendar.id);\n\n        try {\n            const calendarResponse = await google.calendar(\"v3\").events.list({\n                auth,\n                calendarId: calendar.id,\n                timeMin: startDateTime.toISOString(),\n                timeMax: endDateTime.toISOString(),\n                maxResults: 2500,\n                singleEvents: true,\n                orderBy: 'startTime',\n                eventTypes: [\"default\"]\n            });\n            this.logger.trace('Calendar response', { calendarResponse });\n\n            const calendarEvents = (calendarResponse.data.items || [])\n                .filter(e => new Date(e.start?.dateTime ?? 0) >= startDateTime);\n\n            const apiResponse: IApiResponse = {\n                calendarConfig: calendar,\n                events: calendarEvents\n            };\n\n            return apiResponse;\n        } catch (err) {\n            this.logger.error('Error retrieving calendar events', err);\n            throw err;\n        }\n    }\n}\n\nexport default Input;","import { Worklog, Tag } from '../../models';\nimport { GoogleCalendarCalendarConfiguration, IApiResponse } from '.';\nimport { calendar_v3 } from 'googleapis';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nexport class ModelMapper {\n    private logger = getLogger(LoggerCategory.Inputs);\n\n    map(apiResponses: IApiResponse[]): Worklog[] {\n        return apiResponses\n            .map(item => this.mapEventArrayToWorklogs(item))\n            .reduce((a, b) => a.concat(b), []); // flatten\n    }\n\n    private mapEventArrayToWorklogs(calendarEvents: IApiResponse): Worklog[] {\n        const calendarConfig = calendarEvents.calendarConfig;\n        const events = calendarEvents.events || [];\n        this.logger.trace('Events retrieved:', events);\n\n        const mapIndividualWorklog = this.mapIndividualEventToWorklog.bind(this, calendarConfig);\n        return events\n            .filter(e => !!e.start?.dateTime && !!e.end?.dateTime)\n            .map(mapIndividualWorklog);\n    }\n\n    private mapIndividualEventToWorklog(calendarConfig: GoogleCalendarCalendarConfiguration, event: calendar_v3.Schema$Event): Worklog {\n        const startTime = new Date(event.start?.dateTime ?? 0);\n        const endTime = new Date(event.end?.dateTime ?? 0);\n\n        const worklog = new Worklog(event.summary ?? '(No description)', startTime, endTime);\n\n        for (const tagToInclude of calendarConfig.includeTags || []) {\n            const { name, value } = this.parseTag(tagToInclude);\n            const tag = new Tag(name, value);\n            worklog.addTag(tag);\n        }\n\n        return worklog;\n    }\n\n    private parseTag(tagString: string): Tag {\n        const colonPosition = tagString.indexOf(':');\n        const name = tagString.substring(0, colonPosition);\n        const value = tagString.substring(colonPosition + 1, tagString.length);\n        return new Tag(name, value);\n    }\n}\n","export { Input } from './Input';\n\nexport type { GoogleCalendarConfiguration, GoogleCalendarCalendarConfiguration } from './InputConfiguration';\nexport type { IApiResponse } from './IApiResponse';\nexport { ModelMapper } from './ModelMapper';","import { HarvestClient } from '../../services/HarvestClient/HarvestClient';\nimport { IAppConfiguration, Worklog, IServiceRegistrations, Tag } from '../../models';\nimport { HarvestInputConfiguration, HarvestTimeEntry } from '.';\n\nimport momentTimezone from 'moment-timezone';\nimport { getLogger, LoggerCategory } from '../../services/Logger';\n\nexport class Input {\n    private logger = getLogger(LoggerCategory.Inputs);\n    private harvestClient: HarvestClient;\n    private name: string;\n\n    constructor(\n        private serviceRegistrations: IServiceRegistrations,\n        private appConfiguration: IAppConfiguration,\n        private inputConfiguration: HarvestInputConfiguration\n    ) {\n        if (!appConfiguration)\n            throw new Error('App configuration for Harvest App input is required.');\n\n        if (!inputConfiguration)\n            throw new Error('Input configuration for Harvest App input is required.');\n        \n        this.harvestClient = new HarvestClient(inputConfiguration);\n        this.name = inputConfiguration.name;\n    }\n\n    \n\n    async getWorkLogs(startDateTime: Date, endDateTime: Date): Promise<Worklog[]> {\n        this.logger.info(`[${this.name}] Retrieving worklogs from Harvest between`, startDateTime, 'and', endDateTime);\n\n        const parameters = { from: startDateTime, to: endDateTime };\n        const timeEntries = await this.harvestClient.getTimeEntries(parameters);\n\n        return this.mapToDomainModel(timeEntries);\n    }\n\n    private mapToDomainModel(timeEntries: HarvestTimeEntry[]): Worklog[] {\n        const mappedWorklogs = timeEntries.map(te => {\n            const timeZone = this.appConfiguration.options.timeZone;\n\n            let startTime, endTime;\n\n            // Harvest has two types of company configuration:\n            // 1. Timers enabled, in which case, time entries have a spent_date, a start and an end time\n            // 2. Timers disabled, in which case, time entries have a spent_date and a duration (hours)\n            if (te.spent_date && te.started_time && te.ended_time) {\n                startTime = momentTimezone.tz(`${te.spent_date} ${te.started_time}`, 'YYYY-MM-DD hh:mma', timeZone).toDate();\n                endTime = momentTimezone.tz(`${te.spent_date} ${te.ended_time}`, 'YYYY-MM-DD hh:mma', timeZone).toDate();\n            } else if (te.spent_date && te.hours) {\n                startTime = momentTimezone.tz(te.spent_date, timeZone).toDate();\n                endTime = momentTimezone.tz(te.spent_date, timeZone).add(te.hours, 'hours').toDate();\n            } else {\n                this.logger.warn(`[${this.name}] Cannot detect worklog duration from time_entry`, te);\n                return null;\n            }\n\n            const worklog = new Worklog(te.notes, startTime, endTime);\n            worklog.addTag(new Tag('HarvestClient', te.client.name));\n            worklog.addTag(new Tag('HarvestProject', te.project.name));\n            worklog.addTag(new Tag('HarvestTask', te.task.name));\n            \n            return worklog;\n        })\n            .filter(worklog => !!worklog);\n\n        if (mappedWorklogs.length === timeEntries.length)\n            this.logger.info(`[${this.name}] Retrieved ${mappedWorklogs.length} worklogs from Harvest time entries.`);\n        else \n            this.logger.warn(`[${this.name}] Retrieved ${mappedWorklogs.length} worklogs from ${timeEntries.length} Harvest time entries.`);\n\n        return mappedWorklogs;\n    }\n}","export type { HarvestInputConfiguration } from './HarvestInputConfiguration';\nexport { HarvestTimeEntry, HarvestProject, HarvestTask, HarvestClient } from '../../services/HarvestClient/Models';\nexport { Input } from './Input';","import { IServiceRegistrations } from '../models/ServiceRegistrations';\nimport { IAppConfiguration } from '../models/AppConfiguration';\nimport { IInput } from '../inputs/IInput';\nimport { getLogger, LoggerCategory } from '../services/Logger';\n\nconst logger = getLogger(LoggerCategory.Services);\n\n// Loading these eagerly because dynamic imports mess up with the webpack build.\nimport { Input as GoogleCalendarInput } from '../inputs/GoogleCalendar';\nimport { Input as HarvestAppInput } from '../inputs/HarvestApp';\n\nconst inputClasses = {\n    \"GoogleCalendar\": GoogleCalendarInput,\n    \"HarvestApp\": HarvestAppInput,\n}\n\nexport async function loadInputs(serviceRegistrations: IServiceRegistrations, appConfiguration: IAppConfiguration): Promise<IInput[]> {\n    const loadedInputs: IInput[] = [];\n\n    for (const input of appConfiguration.inputs) {\n        logger.debug('Loading', input.type);\n\n        const inputClass = inputClasses[input.type];\n        if (!inputClass)\n            throw new Error(`Input ${input.type} not recognized.`);\n\n        const inputInstance = new inputClass(serviceRegistrations, appConfiguration, input);\n        loadedInputs.push(inputInstance);\n    }\n\n    return loadedInputs;\n}","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => (__WEBPACK_EXTERNAL_MODULE_minimist__[\"default\"]) });","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"path\");","import { getLogger, LoggerCategory } from '../Logger';\nimport { resolve } from 'path';\nimport { IFileLoader } from './IFileLoader';\n\nconst logger = getLogger(LoggerCategory.Services);\n\nexport class LocalFileLoader implements IFileLoader {\n    public async loadJson(filePath: string): Promise<Record<string, unknown>> {\n        const fullPath = resolve(filePath);\n        logger.info('Loading local file:', fullPath);\n        const contents = await import(fullPath);\n        return contents.default || contents;\n    }\n}\n","import { IAppConfiguration, IServiceRegistrations, Worklog, WorklogSet } from './app/models'\nimport { getLogger, configureLogger, LoggerCategory } from './app/services/Logger';\nimport { loadActionsAndConditions, IActionWithCondition } from './app/services/actionLoader';\nimport { getProcessedConfiguration, ParsedTimeFrame } from './app/services/configurationProcessor';\nimport { loadOutputs } from './app/services/outputLoader';\nimport { loadInputs } from './app/services/inputLoader';\nimport minimist from 'minimist';\nimport { S3FileLoader } from './app/services/FileLoader/S3FileLoader';\nimport { LocalFileLoader } from './app/services/FileLoader/LocalFileLoader';\nimport { OutputWithCondition } from './app/services/OutputWithCondition';\n\ntype Arguments = {\n    s3: string;\n    c: string;\n};\n\nexport async function start(receivedArguments: string[] | Arguments): Promise<void> {\n    const logger = getLogger(LoggerCategory.App);\n\n    logger.level = 'trace';\n\n    try {\n        const parsedArguments = await processArguments();\n        const serviceRegistrations = await registerServices(parsedArguments);\n\n        const appConfiguration = await loadConfiguration(parsedArguments, serviceRegistrations);\n        configureLogger(appConfiguration.log4js);\n        logger.info('Logger configuration initialized.');\n\n        const timeFrame = getProcessedConfiguration(appConfiguration);\n        const worklogsPerInput = await loadFromInputs(serviceRegistrations, appConfiguration, timeFrame);\n        const worklogSet = await createWorklogSet(worklogsPerInput, timeFrame);\n        const actions = await loadActions(appConfiguration);\n        await transformWorklogs(actions, worklogSet);\n        await displayWorklogSet(worklogSet);\n        const outputs = await loadOutputsAndFormattersAndConditions(appConfiguration);\n        await outputWorklogSet(outputs, worklogSet);\n        await warnNonOuputProcessed(outputs, worklogSet);\n\n        logger.info('Done.');\n    } catch (e) {\n        logger.error(e);\n        throw e;\n    }\n\n    async function transformWorklogs(actions: IActionWithCondition[], worklogSet: WorklogSet): Promise<void> {\n        for (const { action, condition } of actions) {\n            for (const worklog of worklogSet.worklogs) {\n                if (condition.isSatisfiedBy(worklog))\n                    action.apply(worklog);\n            }\n        }\n    }\n\n    async function loadActions(appConfiguration: IAppConfiguration): Promise<IActionWithCondition[]> {\n        return await loadActionsAndConditions(appConfiguration.transformations);\n    }\n\n    async function warnNonOuputProcessed(outputs: OutputWithCondition[], worklogSet: WorklogSet): Promise<void> {\n        logger.debug('Checking for worklogs that do not match any output.');\n\n        let worklogs = worklogSet.worklogs;\n        for (const { condition, excludeFromNonProcessedWarning } of outputs) {\n            if (excludeFromNonProcessedWarning) continue;\n\n            worklogs = worklogs.filter(w => !condition.isSatisfiedBy(w));\n        }\n\n        if (worklogs.length === 0) {\n            logger.info('All worklogs were processed by at least one output.');\n        } else {\n            logger.warn('The following worklogs were not processed by any output:');\n            for (const worklog of worklogs) {\n                logger.warn(`- ${worklog.toOneLinerString()}`);\n            }\n        }\n    }\n\n    async function outputWorklogSet(outputs: OutputWithCondition[], worklogSet: WorklogSet): Promise<void> {\n        logger.debug('Processing loaded outputs.');\n\n        const outputPromises = [];\n        for (const { output, condition } of outputs) {\n            const conditionFn = condition.isSatisfiedBy.bind(condition);\n            const filteredWorklogSet = worklogSet.getFilteredCopy(conditionFn);\n            outputPromises.push(output.outputWorklogSet(filteredWorklogSet));\n        }\n\n        await Promise.all(outputPromises);\n    }\n\n    async function displayWorklogSet(worklogSet: WorklogSet): Promise<void> {\n        logger.info(`Transformed worklogs: ${worklogSet.worklogs.length} worklogs`);\n        for (const worklog of worklogSet.worklogs) {\n            logger.debug(`Worklog: ${worklog}`);\n        }\n    }\n\n    async function loadOutputsAndFormattersAndConditions(appConfiguration: IAppConfiguration): Promise<OutputWithCondition[]> {\n        return await loadOutputs(appConfiguration.outputs, appConfiguration);\n    }\n\n    async function loadFromInputs(serviceRegistrations: IServiceRegistrations, appConfiguration: IAppConfiguration, timeFrame: ParsedTimeFrame): Promise<Worklog[][]> {\n        const loadedInputs = await loadInputs(serviceRegistrations, appConfiguration);\n\n        return await Promise.all(loadedInputs.map(async i => {\n            const retrievedWorklogs = await i.getWorkLogs(timeFrame.start, timeFrame.end);\n            logger.debug(`Worklogs retrieved from ${i.name}: `);\n            for (const worklog of retrievedWorklogs) {\n                logger.debug(`- ${worklog.toOneLinerString()}`);\n            }\n            return retrievedWorklogs;\n        }));\n    }\n\n    async function createWorklogSet(worklogsPerInput: Worklog[][], timeFrame: ParsedTimeFrame): Promise<WorklogSet> {\n        const flattenedWorklogs = Array.prototype.concat(...worklogsPerInput);\n\n        return new WorklogSet(timeFrame.start, timeFrame.end, flattenedWorklogs);\n    }\n\n    async function loadConfiguration(parsedArguments: Arguments, serviceRegistrations: IServiceRegistrations): Promise<IAppConfiguration> {\n        const configurationFilePath = parsedArguments.c || 'configuration.json';\n        const fileLoader = serviceRegistrations.FileLoader;\n        return <IAppConfiguration><unknown>(await fileLoader.loadJson(configurationFilePath));\n        // TODO Pending: Logger config is not set yet, so this trace is always shown. \n        // logger.trace('Loaded configuration:', configurationContents);\n    }\n\n    async function processArguments(): Promise<Arguments> {\n        logger.debug('Received arguments', receivedArguments);\n\n        if (Array.isArray(receivedArguments)) {\n            const parsedArguments = minimist(receivedArguments);\n            logger.trace('Parsed arguments', parsedArguments);\n            return {\n                s3: parsedArguments.s3,\n                c: parsedArguments.c\n            };\n        }\n\n        return receivedArguments;\n    }\n\n    async function registerServices(parsedArguments: Arguments): Promise<IServiceRegistrations> {\n        const s3Bucket = parsedArguments.s3;\n        return {\n            FileLoader: s3Bucket ? new S3FileLoader(s3Bucket) : new LocalFileLoader()\n        } as IServiceRegistrations;\n    }\n}\n","import { start } from './start';\nimport { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { storeGoogleTokenFromCode, generateAuthUrl } from './app/services/authHandler';\n\nexport const logTimesheets = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n    const { s3, c } = event as unknown as { s3: string, c: string };\n    const parameters = { s3, c };\n\n    await start(parameters);\n\n    return {\n        statusCode: 200,\n        body: 'Timesheets logged.'\n    };\n};\n\nexport const storeToken = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n    if (event.queryStringParameters.error) {\n        return {\n            statusCode: 400,\n            body: JSON.stringify({\n                error: event.queryStringParameters.error\n            })\n        };\n    }\n\n    await storeGoogleTokenFromCode(event.queryStringParameters.code);\n\n    return {\n        statusCode: 200,\n        body: 'Token stored. You can close this window.'\n    };\n};\n\nexport const loginRedirect = async (): Promise<APIGatewayProxyResult> => {\n    const authUrl = await generateAuthUrl();\n    return {\n        statusCode: 302,\n        headers: {\n            Location: authUrl\n        },\n        body: 'Redirecting...'\n    };\n};\n"],"names":[],"sourceRoot":""}